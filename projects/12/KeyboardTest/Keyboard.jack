// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    /** Initializes the keyboard. */
    function void init() {
        return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        var int value;
        let value = Memory.peek(24576);
        if (value > 152) {
            return 0;
        } else {
            return value;
        }
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
        var int value;
        var int value2;

        let value = 0;

        do Output.printChar(124);
        while (value = 0) {
            do Output.backSpace();
            do Output.printChar(124);
            do Sys.wait(100);
            do Output.backSpace();
            do Output.printChar(32);
            do Sys.wait(100);
            let value = Keyboard.keyPressed();
        }

        let value2 = value;
        while (value2 > 0) {
            do Sys.wait(100);
            let value2 = Keyboard.keyPressed();
        }

        do Output.printChar(value);
        return value;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
        var String str;
        var boolean notread;
        var int c;

        let notread = true;
        let str = String.new(100);

        do Output.printString(message);
        while (notread) {
            let c = Keyboard.readChar();
            if (c = 128) {
                do Output.println();
                let notread = false;
            } else {
                if (c = 129) {
                    do str.eraseLastChar();
                    do Output.backSpace();
                } else {
                    do str.appendChar(c);
                } 
            }
        }
        return str;
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
        var String str;
        let str = Keyboard.readLine(message);
        return str.intValue();
    }
}
